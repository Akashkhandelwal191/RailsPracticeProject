c
params[:page]
n
params[:page]
c
params[:page]
params
c
params[:page]
c
params[:page]
c
dtime
date
a
c
date
date_formating
c
payment.method
payment
c
params[:id]
params
c
self.razorpay_order_id
n
self.razorpay_order_id
order.id
order
n
self
c
self.user.cart.total_amount
self.user.cart
self.user
self
c
self
c
params
c
n
current_user.cart.update(total_price:updated_discounted_price,total_amount:(updated_discounted_price-1800))
updated_discounted_price
current_user.cart.line_items_products.count
current_user.cart.line_items_products
current_user.cart
current_user
c
@sum
sum
deno
avg
c
n
product_ids
n
product_ids
c
permitted_params
params
c
current_user
params
c
params
@gg
c
@gg
@@gg
@gg
c
params
c
data-id
data
params
c
params
c
params[:id]
params
params.id
params("id")
params(id)
params(:id)
params(id)
params([:id])
params
c
current_user.wish_list.create
current_user.wish_list
current_user
c
cx
resource.product_images
resource
img
c
m.category.category_name
m.category
m
c
resource.errors
resource
c
n
toastr.error('<%= message %>')
ntoastr.error('<%= message %>')
n
resource.errors.full_messages
c
n
c
@user.errors
@user
user
flash.any?
flash.any
flash
c
n
user.errors
n
c
n
c
aa.valid?
aa.errors.any?
aa.errors.any
aa.errors
aa
n
user.errors
user
n
pass.blank?
pass
n
User.check_password(resource, params[:user][:current_password])
c
aa
c
aa.errors
aa.valid?
aa
c
n
aa
aa.nil?
c
n
c
aa
n
c
aa.type.blank?
aa.type
aa
aa.blank?
n
c
aa
aa.errors
aa.erros
aa.valid?
aa
n
c
aa
aa.erros
resource.errors
resorce.erros
resource.valid?
n
user.errors
user.errors.add(:base, "current Password can't be blank") if pass.blank?
pass.blank?
pass
user.errors
user.erros
c
pass
user
c
self
pass
self
c
self
self.current_password
self.errors
n
c
self.errors
n
c
resource.valid?
c
resource.errors
resource.valid?
c
resource.valid?
c
resource.valid?
c
resource.valid?
params
parms
resource
c
self.errors
self
c
self
c
n
c
params[resource_name][:current_password].blank?
params[resource_name][:current_password]
params[resource_name]
params[resource_name].current_password
params[resource_name].current_password.present?
params[resource_name].current_password.blank?
params[resource_name]
resource
params[:user][:password].present?
params[:user][:password]
params[:user]
params
resource_name
self.resource
self
c
n
c
self.errors
self.errors.add(:base, "current Password can't be blank")
self.errors
c
n
self.errors.add(:base, "current Password can't be blank")
self.current_password.nil?
c
self.current_password
self
params.current_password
params
c
respond_with resource
set_minimum_password_length
clean_up_passwords resource
resource
c
n
